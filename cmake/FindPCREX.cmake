set(PCREX_FOUND FALSE)
set(PCRE2_CODE_UNIT_WIDTH 8)

find_path(PCRE1_INCLUDE_DIRS NAMES pcre.h)
find_library(PCRE1_LIBRARIES NAMES "pcre")

find_path(PCRE2_INCLUDE_DIRS NAMES pcre2.h)
find_library(PCRE2_LIBRARIES NAMES "pcre2-${PCRE2_CODE_UNIT_WIDTH}")

if (PCRE1_INCLUDE_DIRS AND PCRE1_LIBRARIES)
	message(STATUS "Using PCRE1")
	set(PCREX_COMPILER_DEFINITIONS "USE_PCREX=1")
	set(PCREX_MAJOR 1)
	set(PCREX_FOUND TRUE)
	set(PCREX_INCLUDE_DIRS "${PCRE1_INCLUDE_DIRS}")
	set(PCREX_LIBRARIES "${PCRE1_LIBRARIES}")

elseif (PCRE2_INCLUDE_DIRS AND PCRE2_LIBRARIES)
	message(STATUS "Using PCRE2")
	set(PCREX_COMPILER_DEFINITIONS "USE_PCREX=2")
	set(PCREX_MAJOR 2)
	set(PCREX_FOUND TRUE)
	set(PCREX_INCLUDE_DIRS "${PCRE2_INCLUDE_DIRS}")
	set(PCREX_LIBRARIES "${PCRE2_LIBRARIES}")

endif()

if (NOT (PCREX_INCLUDE_DIRS AND PCREX_LIBRARIES))
	if (PCREX_FIND_REQUIRED OR NOT PCREX_FIND_QUIETLY)
		message(WARNING "Could not find PCRE or PCRE2")
	endif()
	if (PCREX_FIND_REQUIRED)
		message(FATAL_ERROR "Abort because PCREX is REQUIRED")
	endif()
endif()
